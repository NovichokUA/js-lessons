// Наслідування класів
// Ключове слово extends дозволяє реалізувати наслідування класів, коли один клас(дочірній,
//     похідний) наслідує властивості й методи іншого класу(батьківського).
// Розгляньмо приклад:

// class Parent {}

// class Child extends Parent {
//   // ...
// }

// У виразі class Child extends Parent дочірній клас Child наслідує(розширює) від
// батьківського класу Parent.
// Це означає, що ми можемо оголосити базовий клас, який зберігає загальні характеристики й
//  методи для групи похідних класів, які наслідують властивості й методи батьківського, але
//   також додають свої унікальні.
// У виразі class Child extends Parent дочірній клас Child наслідує(розширює) від
//  батьківського класу Parent.
// Це означає, що ми можемо оголосити базовий клас, який зберігає загальні характеристики й
// методи для групи похідних класів, які наслідують властивості й методи батьківського, але
//  також додають свої унікальні.
// Уявімо, у застосунку є користувачі з різними ролями: адміністратор, копірайтер,
// контент-менеджер тощо.У кожного типу користувача є набір загальних характеристик,
// наприклад, пошта і пароль, але також є й унікальні.
// Створивши незалежні класи для кожного типу користувача, ми отримаємо дублювання загальних
//  властивостей і методів.Якщо необхідно змінити, наприклад, назву властивості, доведеться
//  проходити по всіх класах, а це незручно й вимагає багато часу.
// Замість цього можна:

// створити загальний клас User, який буде зберігати набір загальних властивостей і методів
// після чого створити класи для кожного типу користувача, які наслідують цей набір від
// класу User
// За потреби змінити щось спільне, достатньо буде змінити тільки код класу User.

// class User {
//   #email;

//   constructor(email) {
//     this.#email = email;
//   }

//   get email() {
//     return this.#email;
//   }

//   set email(newEmail) {
//     this.#email = newEmail;
//   }
// }

// class ContentEditor extends User {
// 	// Тіло класу ContentEditor
// }

// const editor = new ContentEditor("mango@mail.com");
// console.log(editor); // { #email: "mango@mail.com" }
// console.log(editor.email); // "mango@mail.com"

// Клас ContentEditor наслідує від класу User його конструктор, геттер і сеттер email, а
//  також приватну властивість #email.

class User {
  constructor(email) {
    this.email = email;
  }

  get email() {
    return this.email;
  }

  set email(newEmail) {
    this.email = newEmail;
  }
}
class Admin extends User {
  static role = {
    BASIC: "basic",
    SUPERUSER: "superuser",
  };
}
console.log(Admin.role.BASIC);
